import os
import random
import re
import asyncio
from flask import Flask, request
from telegram import Update
from telegram.ext import Application, MessageHandler, ContextTypes, filters

TOKEN = "7532659685:AAFJytrCeABPZGxYQ7Ahf5DRx4sD0Q3mUKU"

app = Flask(__name__)
application = Application.builder().token(TOKEN).build()

keywords = {
    ("صبح بخیر", "صبحت بخیر", "صبح دل انگیز", "صبحت پر انرژی", "صبح شد", "صب بخیر"): [
        "صبحت بخیر رفیق کافه‌ای! وقتشه فنجان قهوه‌ت رو آماده کنم!",
        "صبح شد و کافه بازه! بیا یه فنجون آرامش بزنیم!",
    ],
    ("ظهر بخیر", "وقت ناهار", "ظهر شد", "نیم روز خوش", "ظهربخیر"): [
        "ظهر بخیر عزیز دلم! وقتشه یه قهوه سبک بزنیم وسط روز!",
        "ناهارتو خوردی؟ اگه نه بیا اینجا باهم ناهار بزنیم!",
    ],
    ("شب بخیر", "شب خوش", "شب شد", "شب قشنگی داشته باشی"): [
        "شب بخیر رفیق! بخواب تا خواب‌هات هم بوی قهوه بده!",
        "کافه فعلا بسته‌س ولی دلم همیشه به روت بازه عمو!",
    ],
    ("سلام", "سلااام", "درود", "هی", "های"): [
        "سلام سلطان! چطوری رفیق کافه‌ای من؟",
        "سلام! نور چشمای کافه اومد!",
        "به به! مهمون داریم! بیا بشین کنار بخاری ☕🔥",
        "درود بر جان کافه‌چی! 🌟🎩"
    ],
    ("خوبی؟", "چطوری؟", "حالت چطوره؟", "چه خبر؟", "خوبی", "خبی", "چطوری", "حالت چطوره"): [
        "من خوبم، قهوه‌سازم سالمه، تو خوبی عموجون؟",
        "سلامتی تو عمو! قهوه تازه دم شده بیا قهوه بزنیم!",
        "من خوبم اگه تو حالت خوب باشه! ❤️🤝",
        "حالم به دمای قهوه‌ست... وقتی تویی، همیشه گرمه! 🔥👓"
    ],
    ("دلم گرفته", "حالم بده", "دلم تنگه", "افسرده‌م", "دلتنگی", "ناراحتم", "دلتنگم", "حوصله ندارم"): [
        "یه فنجون چای زعفرونی بزن، دلت وا شه رفیق!",
        "بیا حرف بزنیم، اینجا واسه دل دلتنگت بازه عمو جون!",
        "بخار قهوه گاهی از بخار اشک آروم‌تره... ☕🥀",
        "عمو گوشاش بازه، بگو چی شده... 🎧🖤",
        "یه فنجون امید با عطر هل واسه دلت دم کردم 🍵✨"
    ],
    ("پیوی", "پی وی", "pv", "private", "p v"): [
        "پیوی؟ اوه، نه دوست عزیز، پیوی برای قهوه‌های انحصاریه!",
        "پیوی؟! اینجا کافه‌ست، نه اتاق جلسات خصوصی!",
    ],
    ("اصل",): [
        "اسمش نازنین ممده، ۶۰ سالشه از یه وری!",
        "چیکار به اصلش داری؟ فیکه رو گردنش زده made in china!",
    ],
    ("قهوه",): [
        "قهوه داغ، چای لب‌سوز یا دمنوش شب؟ انتخاب با توئه 🍵☕🌿",
        "نوشیدنی مخصوص امشب: «دل‌آرام» با طعم وانیل و دو قطره امید ✨💧",
        "بگو فقط تلخ یا شیرین؟ باقی‌ش با عمو 🍫☕"
    ],
    ("عشق",): [
        "عشق قهوه‌ایه که حتی اگه سرد بشه، خاطره‌ش گرمه ❤️☕",
        "عمو خودش یه دل باخته‌ست... بیا با هم بنوشیم 💔🍷",
        "دلت تپید؟ بیا بشین کنار پنجره... باد حرفتو می‌رسونه 🪟💬"
    ],
    ("شعر",): [
        "«در این سرای بی‌کسی، کسی به در نمی‌زند...» 📜😔",
        "بیت امشب با عطر قهوه قاطی شده: «تو را من چشم در راهم...» ☕👀",
        "شاعر شدی؟ بنویس، من هم بخونم کنار قهوه 📖✍️"
    ],
    ("تنهایی",): [
        "تنهایی گاهی همدم خوبیه، مخصوصاً وقتی کنار قهوه باشه 🍂☕",
        "تو تنها نیستی... کافه همیشه چراغ داره برات 🕯🫶",
        "یه فنجون تنها بخوری یا عمو هم بشینه کنارت؟ 🪑👓"
    ],
    ("رفیق", "دوست"): [
        "رفیق جان! صندلی همیشگیت هنوز گرم مونده 🪑❤️",
        "قهوه با دوست مزه‌ی دیگه‌ای داره، نه؟ 🍵👬",
        "همراهی یعنی یکی حرف نزنه ولی باشه... مثل قهوه بی‌شیرین 🖤🤍"
    ],
    ("شوخی",): [
        "یه بار قهوه عاشق شیر شد، گفتن از اون موقع مزه‌ش نرم‌تر شده! ☕😄",
        "بخند رفیق! دل عمو وقتی تو بخندی قند می‌ریزه! 🍬😂",
        "کافه‌ای که نخنده، فقط یه انبار تلخه! 😆🪙"
    ],
    ("موزیک",): [
        "بذار یه موزیک جَز بذارم، قهوه‌تو تو حال خودش باشه 🎶☕",
        "موسیقی و قهوه؟ ترکیب بی‌رقیب تنهاییای شب 🌃🎧",
        "امشب آهنگ سنتی یا بلوز؟ انتخاب با تو 🎻🎺"
    ],
    ("بارون",): [
        "بارونه؟ بیا جلو شومینه... قهوه با صدای بارون می‌چسبه 🌧️🔥",
        "هوای ابری، یه چتر کلمه می‌خواد... بیا تو کافه 📚☂️",
        "هر قطره‌ی بارون یه شعره که هنوز نخوندیش... 💧📖"
    ],
    ("خواب",): [
        "یه دمنوش آرامش دم کردم، بخور و بعدش یه چُرت 😴🍵",
        "بخوابی یا بیدار باشی، کافه برات روشنه 🌙💤",
        "خواب دیدی با عمو رفتی سفر قهوه؟ بیا بیدار شو! ✈️☕"
    ],
    ("بیداری",): [
        "هنوز بیداری؟ پس بیا دو فنجون قهوه‌ی شبانه مهمون باشی ☕🌌",
        "شبای کافه با رفیقای بیدار قشنگ‌تره 🌙🕯",
        "تا دیر وقت بمون، عمو حرف داره واست... 📖💬"
    ],
    ("حال خوب",): [
        "حال خوب یعنی یه فنجون گرم با یه جمله آروم‌دهنده ☕🌈",
        "بیا یه شات انرژی بریزم تو فنجونت! ⚡🍵",
        "دلت بخنده، فنجونت لب‌ریز شه از خوشی 💛☕"
    ],
    ("فال",): [
        "فالت می‌گه یه اتفاق خوب با طعم قهوه داره میاد! 🔮☕",
        "بخور قهوه‌تو، بعدش نعلبکی رو برات می‌چرخونم ببینم چی توشه 🫖👁️",
        "فنجونت تهش یه قلب داشت... کی تو فکرت بوده؟ ❤️‍🔥"
    ],
    ("خاطره",): [
        "یه جرعه بنوش... خاطره‌ش خودش میاد بالا 🕰️☕",
        "یادته اون روز که... بی‌خیال! بیا فقط بشین و بخند 😌📸",
        "گذشته قند نیست ولی قهوه‌ش هنوز تلخه 🍬☕😅"
    ],
    ("مهمون",): [
        "به کافه خوش اومدی! قهوه اول همیشه مهمونه عموئه ☕🎉",
        "یه تازه‌وارد داریم؟ صندلی طلایی بیارین! 👑🪑",
        "قدمت رو چشم! بفرما، منو دست راستته 📋👉"
    ],
    ("منو",): [
        "منوی امشب: قهوه عشق، چای رفاقت، دمنوش آرامش ☕💞",
        "دنبال طعم خاصی هستی؟ بگو تا ترکیب کنیم! 🧪🍵",
        "نوشیدنی با طعم شعر؟ یا یه جرعه فلسفه؟ 📚☕"
    ],
    ("کتاب",): [
        "کتاب بخونی با قهوه؟ بهترین قرار شبانه‌ست 📖☕",
        "داستان می‌خوای؟ عاشقانه یا پلیسی؟ من بلدم! 🔍💘",
        "کتاب بی‌قهوه مثل کافه بی‌عطره... 🍂📚"
    ]
}

def normalize_text(text):
    text = re.sub(r'[؟?!]', '', text)
    text = re.sub(r'\s+', ' ', text)
    text = text.replace('‌', ' ')
    text = text.replace('آ', 'ا')
    return text.strip().lower()

def get_response(text):
    processed = normalize_text(text)
    if processed == "/start":
        return (
            "من عمو کافه‌چی هستم!\n"
            "سازنده: Mehdi_mashih\n"
            "برای دیدن لیست کلمات، بفرست: منوی کلمات"
        )
    if processed == "منوی کلمات":
        return "\n".join(["- " + list(group)[0] for group in keywords.keys()])
    if processed == "سازنده":
        return "Mehdi_mashih"
    for key_group, responses in keywords.items():
        for keyword in key_group:
            if keyword in processed:
                return random.choice(responses)
    return None

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    if not message:
        return
    text = message.text
    chat_id = message.chat.id
    message_id = message.message_id
    response = get_response(text)
    if response:
        await context.bot.send_message(chat_id=chat_id, text=response, reply_to_message_id=message_id)

application.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))

@app.route("/")
def home():
    return "کافه آنلاینِ عمو فعاله!"

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), application.bot)
    asyncio.run(application.initialize())
    asyncio.run(application.process_update(update))
    return "ok"

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)

